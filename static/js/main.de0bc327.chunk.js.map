{"version":3,"sources":["components/Header.jsx","components/ProductButton.jsx","components/Product.jsx","components/product-list.js","components/Products.jsx","components/CartItem.jsx","components/Cart.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","updatePage","page","className","onClick","count","cart","countCartItems","ProductButton","length","newItemLocation","findIndex","el","item","id","itemInfo","push","newItem","addItemToCart","children","Product","name","src","url","alt","productList","Products","map","key","CartItem","updateCart","amountChange","location","newList","filter","Cart","App","useState","setPage","setCart","newPage","updatedCart","console","log","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de0bc327.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './Header.css'\r\n\r\nfunction Header(props) {\r\n\r\n    function updatePage(page) {\r\n        // console.log(\"clicked \" + page);\r\n        props.page(page)\r\n    }\r\n\r\n    function countCartItems() {\r\n        let count = 0;\r\n        for (let item of props.cart) {\r\n            count += item.count;\r\n        }\r\n        // console.log(\"total items = \" + count);\r\n        return count;\r\n    }\r\n    return (\r\n        <header>\r\n            <div className=\"storeName\">\r\n                Better Goods, Inc.\r\n            </div>\r\n            <nav>\r\n                <button onClick={ () => updatePage(\"home\")} className=\"header-button\">Home</button>\r\n                <button onClick={ () => updatePage(\"cart\")} className=\"header-button\">Cart</button>\r\n            </nav>\r\n            <div className=\"cart-item-count\">\r\n                {countCartItems()}\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nimport './ProductButton.css'\r\n\r\nfunction ProductButton(props) {\r\n\r\n    function addItemToCart () {\r\n        let cart = props.cart;\r\n\r\n        // console.log(\"ProductButton cart = \");\r\n        // console.log(cart);\r\n        let numItems = cart.length;\r\n        // console.log(\"Button cartLength  = \" + numItems);\r\n        if (numItems > 0) {\r\n        //   console.log(\"numItems \" + numItems + \" items\")\r\n        //   console.log(\"found at index \" + cart.findIndex ( el => el.item.id === props.itemInfo.id ) );\r\n          let newItemLocation = cart.findIndex ( el => el.item.id === props.itemInfo.id );\r\n    \r\n    \r\n          if (newItemLocation !== -1) {  // item already exists in the array\r\n            cart[newItemLocation].count++;\r\n            // console.log(\"cart is now\");\r\n            // console.log(cart);\r\n    \r\n          } \r\n          else {  // item id is unique and only found in last position array (\r\n              cart.push({item: props.itemInfo, count: 1})\r\n          }\r\n\r\n\r\n        } else { // no items yet in cart\r\n            cart.push({item: props.itemInfo, count: 1});\r\n            // console.log(\"pushed into empty cart and now #items = \");\r\n            // console.log(cart.length);\r\n        }\r\n\r\n\r\n        // console.log(props.itemInfo.name);\r\n        props.newItem(cart);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button className=\"product-button\" onClick={ () => addItemToCart()}>{props.children}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductButton;","import React from 'react'\r\n\r\nimport './Product.css'\r\nimport './ProductButton'\r\nimport ProductButton from './ProductButton';\r\n\r\n\r\nfunction Product(props) {\r\n\r\n\r\n    return (\r\n        <div className=\"productDiv\">\r\n            <div className=\"itemName\">{props.itemInfo.name}</div>\r\n            <img src={props.itemInfo.url} alt={props.itemInfo.name}/>\r\n            <ProductButton itemInfo={props.itemInfo} cart={props.cart} newItem={props.newItem}>Add To Cart</ProductButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product;","const productList = [\r\n    {\r\n        id: 1,\r\n        name: 'Red Apples',\r\n        url: 'https://5.imimg.com/data5/HF/CW/MY-51857835/organic-apple-fruit-250x250.jpg'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Baby Ball',\r\n        url: 'https://images-na.ssl-images-amazon.com/images/I/81kTc0r6StL._SX425_.jpg'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Arrow',\r\n        url: 'https://5.imimg.com/data5/MS/KC/MY-64362/archery-arrow-bow-500x500.jpg'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Optical Mouse',\r\n        url: 'https://img2.exportersindia.com/product_images/bc-full/2019/7/766725/computer-mouse-1562395662-4985560.jpeg'\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Toothbrush Set',\r\n        url: 'https://i5.walmartimages.com/asr/28243528-c34e-4ceb-8690-4ad64a384477_1.dc5a3da55780f062793f5aaa58ff33cd.jpeg'\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Breakfast Cereal',\r\n        url: 'http://dm61q01mhxuli.cloudfront.net/images/m103/image2/f25-2509201-4100hr-dd.jpg'\r\n    },\r\n    {\r\n        id: 7,\r\n        name: 'Kellogg\\'s Pops',\r\n        url: 'https://images-na.ssl-images-amazon.com/images/I/81W5GFO1yuL._SL1500_.jpg'\r\n    },\r\n    {\r\n        id: 8,\r\n        name: 'Broccoli',\r\n        url: 'https://i5.walmartimages.ca/images/Large/094/505/6000200094505.jpg'\r\n    }\r\n];\r\n\r\nexport default productList;","import React from 'react'\r\nimport Product from './Product'\r\nimport productList from './product-list.js'\r\n\r\nimport './Products.css'\r\n\r\nfunction Products(props) {\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"main-text\">Select Your Products</div>\r\n\r\n        <div className=\"products-section\">\r\n            {productList.map( (el) => <Product key={el.id} itemInfo={el} cart={props.cart} newItem={props.newItem}/> )}\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Products;","import React from 'react'\r\n\r\nimport './CartItem.css'\r\n\r\nfunction CartItem(props) {\r\n\r\n    function updateCart(amountChange) {\r\n\r\n        let location = props.cart.findIndex( (el) => el.item.id === props.itemInfo.item.id);\r\n        props.cart[location].count += amountChange;\r\n        // update the cart with the new count. If the count = 0, then remove it from the cart array\r\n        props.newList(props.cart.filter( (el) => el.count !== 0));\r\n    }\r\n\r\n    return (\r\n         <div className=\"cart-item\">\r\n            <img src={props.itemInfo.item.url} alt={props.itemInfo.item.name}/>\r\n            <div className=\"item-name\">{props.itemInfo.item.name}</div>\r\n            <div className=\"item-count\">Quantity: \r\n                <button onClick={ () => updateCart(1)}>+</button>\r\n                <span className=\"item-count__span\">{props.itemInfo.count}</span>\r\n                <button onClick={ () => updateCart(-1)}>-</button>\r\n                <button className=\"remove-from-cart\" onClick={ () => updateCart(props.itemInfo.count * -1)}>X</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CartItem;","import React from 'react'\r\nimport CartItem from './CartItem'\r\n\r\nimport './Cart.css'\r\n\r\nfunction Cart(props) {\r\n    // console.log(\"cart = \");\r\n    // console.log(props.cart);\r\n    return (\r\n        <div>\r\n            <div className=\"main-text\">Review Your Products</div>\r\n\r\n            <div className=\"cart-section\">\r\n                {(props.cart.length !== 0)\r\n                ? props.cart.map( (el) => <CartItem key={el.item.id} itemInfo={el} newList={props.newList} cart={props.cart}/> )\r\n                : <div className=\"empty-cart-text\">Add some items to your cart.</div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart;","import React, { useState } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/Header'\nimport Products from  './components/Products';\nimport Cart from './components/Cart'\n\n\nfunction App() {\n  const [page, setPage] = useState(\"home\")\n  // const [page, changePage] = useState(\"cart\")  // FOR TESTING\n  const [cart, setCart] = useState([]);\n  // const [cart, addToCart] = useState([  // FOR TESTING\n    \n  //   {item: {id: 2, name: \"ball\", url: \"https://images-na.ssl-images-amazon.com/images/I/81kTc0r6StL._SX425_.jpg\"},\n  //   count: 3},\n  //   {item: {id: 3, name: \"arrow\", url: \"https://5.imimg.com/data5/MS/KC/MY-64362/archery-arrow-bow-500x500.jpg\"},\n  //   count: 1}\n  // ]);\n\n  function generateHomePage() {\n    // console.log(\"show home\");\n        return (\n          <>\n            <Products newItem={ (updatedCart) => setCart([...updatedCart])} cart={cart} />\n          </>\n        )\n    }\n\n    function generateCartPage() {\n      // console.log(\"show cart\");\n          return (\n            <>\n              <Cart cart={cart} newList={ (updatedCart) => setCart([...updatedCart])}/>\n            </>\n          )\n      }\n\n  return (\n    <div className=\"App\">\n      <Header \n        page={(newPage) => setPage(newPage)} \n        cart={cart}\n      />\n\n      {/* Update the view based on which screen should be showing */}\n      {(page === \"home\") \n      ? generateHomePage()\n      : (page === \"cart\")\n      ? generateCartPage()\n      : console.log(\"Message from App.js: page display error\")\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}